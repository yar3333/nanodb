<?php
/**
 * Generated by Haxe 4.0.0-rc.2+77068e10c
 */

namespace nanodb\_Array;

use \nanodb\php\Boot;
use \nanodb\Array_hx;
use \nanodb\php\_Boot\HxClosure;

class ArrayIterator {
	/**
	 * @var Array_hx
	 */
	public $arr;
	/**
	 * @var int
	 */
	public $idx;

	/**
	 * @param Array_hx $arr
	 * 
	 * @return void
	 */
	public function __construct ($arr) {
		$this->arr = $arr;
		$this->idx = 0;
	}

	/**
	 * @param string $method
	 * 
	 * @return HxClosure
	 */
	public function __get ($method) {
		if ($method === "hasNext" || $method === "next") {
			$target = $this;
			if (is_string($target)) {
				return Boot::getStaticClosure($target, $method);
			} else {
				return Boot::getInstanceClosure($target, $method);
			}
		} else {
			return null;
		}
	}

	/**
	 * @return bool
	 */
	public function hasNext () {
		return $this->idx < $this->arr->length;
	}

	/**
	 * @return mixed
	 */
	public function next () {
		return ($this->arr->arr[$this->idx++] ?? null);
	}
}

Boot::registerClass(ArrayIterator::class, '_Array.ArrayIterator');
